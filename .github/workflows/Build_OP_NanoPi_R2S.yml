#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build_NanoPi_R2S

on: 
  release:
    types: [published]
  

  #push:
  #  branches: 
  #    - master

  schedule:
    - cron:  0 1 1 * ?
  workflow_dispatch:

  #watch:
  #  types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex node-uglify git gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a
        
    - name: Import external feeds
      working-directory: ./openwrt
      run: |
       rm -rf package/luci-app-godproxy && git clone https://github.com/godros/luci-app-godproxy.git package/luci-app-godproxy
   #   git clone https://github.com/xiaorouji/openwrt-passwall.git package/lienol
   #   git clone "your_github_link" package/"your_folder_name"    

    - name: Configuration Customization - Build_NanoPi_R2S
      env:
        CONFIG_FILE: 'NanoPi_R2S.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
    - name: Prepare artifact
      working-directory: ./openwrt
      run: |
        cd ..
        mkdir -p ./artifact/firmware
        mkdir -p ./artifact/package
        mkdir -p ./artifact/buildinfo
        mkdir -p ./release
        cd openwrt
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        cp -rf $(find ./bin/targets/ -type f) ../artifact/firmware/
        cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ../artifact/package/
        cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ../artifact/buildinfo/
        rm -rf bin/ tmp/
        cd ..
    - name: Deliver buildinfo
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_buildinfo
        path: ./artifact/buildinfo/

    - name: Deliver package
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_package
        path: ./artifact/package/

    - name: Deliver firmware
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_firmware
        path: ./artifact/firmware/

#     - name: Upload release asset
#       uses: svenstaro/upload-release-action@v2
#       with:
#         repo_token: ${{ secrets.GITHUB_TOKEN }}
#         file: ./release/*
#         tag: ${{env.DEVICE}}-${{env.strDate}}
#         file_glob: true
#         overwrite: true
#         release_name: ${{env.strDevice}} ${{env.strDate}} 自动发布
#     - name : Upload artifact
#       uses: actions/upload-artifact@master
#       with:
#         name: OpenWrt
#         path: openwrt/bin
